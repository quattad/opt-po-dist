GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows - 03/02/19 16:58:52 Page 1
Determining Theoretical Trays Required for Propylene Oxide (PO) Separation
System --- Multicomponent with PO as light key and Methanol as heavy key at 2bar - 2.6bar.


   3   
      This model determines the number of theoretical trays required for PO
      separation based on the works of Viswanathan and Grossman.
       
      Variable
               Number of components in feed, c
               Molar flow rate, f
               Feed temperature, tf
               Feed pressure, pf
               Molar specific enthalpy of feed, zfc
               Vector of mole fractions, zf = {zf1, zf2, ..., zfc}
       
               Molar flow rate for liquid leaving tray i, l(i)
               Mole fraction of liquid stream leaving tray i, x(i)
               Molar specific enthalpy of liquid stream leaving tray i, hl(i)
               Fugacity of component j in liquid stream leaving tray i, fl(i,j)
       
               Molar flow rate for vapor leaving tray i, v(i)
               Mole fraction of vapor stream leaving tray i, y(i)
               Molar specific enthalpy of vapor stream leaving tray i, hv(i)
               Fugacity of component j in vapor stream leaving tray i, fv(i,j)
       
               Top Product Rate, P1
               Bottom Product Rate, P2
       
               Upper bound of liquid and vapor flowrates, fmax
       
      Positive Variable  // used for variables for which negative values are meaningless
       
      Subsets
               Reboiler, R = {1}
               Condenser, C = {N}
               Column Trays, COL = {2, 3, ..., N-1}
      Equation
               There are a total of 9 equations that need to be met that mainly
               correspond to the MESH equations.
       
               1) Phase Equlibrium
               2) Phase Equlibrium Error
               3) Total Material Balance
               4) Component Material Balances
               5) Enthalpy Balances
               6) Reflux single tray constraint
               7) Reboiler single tray constraint
               8) Pressure Profile
               9) Fugacity and enthalpy balances of each component on each tray
  51   
  52  * ----------------------------- STEP 1 : IMPORT THERMODYNAMIC PACKAGE -----------------------------
  53  * Include developed libraries in GAMS
  54   
  60   
  69   
  75   
FUNCLIBIN  NRTLideal NRTLideal.dll
Function Library NRTLideal
NRTL + IG Property Package v0.9 by Ph.D. J.I. Manassaldi (jmanassaldi@frro.utn.edu.ar); Ph.D. N.J. Scenna; Ph.D. M.C. Mussati; Ph.D. S.F. Mussati (mussati@santafe-conicet.gov.ar)
GAMS Development Corporation

Mod. Function                          Description
Type

NLP  rho_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase molar density [mol/m3]
NLP  rho_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase molar density [mol/m3]
NLP  h_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase molar enthalpy [J/mol]
NLP  h_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase molar enthalpy [J/mol]
NLP  s_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase molar entropy [J/(mol.K)]
NLP  s_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase molar entropy [J/(mol.K)]
NLP  f1_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase fugacity of component 1 [bar]
NLP  f1_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase fugacity of component 1 [bar]
NLP  f2_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase fugacity of component 2 [bar]
NLP  f2_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase fugacity of component 2 [bar]
NLP  f3_liq(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)liquid phase fugacity of component 3 [bar]
NLP  f3_vap(temperature [k],pressure [bar],methanol,water,1,2-propylene oxide)vapor phase fugacity of component 3 [bar]

  77   
  78  function f1l     /NRTLideal.f1_liq /;
  79  function f2l     /NRTLideal.f2_liq /;
  80  function f3l     /NRTLideal.f3_liq /;
  81   
  82  function f1v     /NRTLideal.f1_vap /;
  83  function f2v     /NRTLideal.f2_vap /;
  84  function f3v     /NRTLideal.f3_vap /;
  85   
  86  function h_liq   /NRTLideal.h_liq /;
  87  function h_vap   /NRTLideal.h_vap /;
  88   
  89  Set j 'components' / methanol, water, PO, PG /;
  90   
  91   
  92  * ----------------------------- STEP 2 : DEFINE PHYSICAL PROPERTIES -----------------------------
  93   
      PHYSICAL PROPERTIES CONSTANTS
      PG critical temp and pressure not pertinent
  98   
  99  Table prcon (j, *) 'physical properties'
 100                   mm      tb      tc      pc
 101    methanol    32.042  337.85  513.15  79.54
 102    water       18.015  373.15  647.35 220.89
 103    PO           58.08  307.38  482.25  49.24
 104    PG           76.09  460.15                            ;
 105   
      VAPOR PRESSURE CONSTANTS
      all constants obtained from Perry's Chemical Engineering handbook except for PO and PG.
      Pressures in Pa Formula for Perry: lnP = a + b/T + c*lnT + d*power(T,e)
      PO obtained from 1966 paper in the format logP* = 7.658 - 1472/T. Applicable within range of 40-70oC.
 112   
 113  Table vpcon(j, *) "constants for vapor pressure"
 114                     a        b         c            d        e       tmin    tmax
 115    methanol    82.718  -6904.5   -8.8622    7.4664e-6        2     175.47   512.5
 116    water       73.649  -7258.2   -7.3037    4.1653e-6        2     273.16   647.096
 117    PO           7.658  -1472
 118    PG           212.8  -15420    -28.109    2.1564e-5        2                       ;
 119   
      ISOBARIC HEAT CAPACITY CONSTANTS
      all constants obtained from Perry's Chemical Engineering handbook except for PO.
      Specific heat capacity for liquid phase, CpL = a + b*T +c*power(T,2) + d*power(T,3) + e*power(T,4)
      For PO in J/mol.K : a + b*T + c*power(T,2)
 126   
 127  Table cpconl (j, *) "isobaric heat capacity constants for liquid phase"
 128                      a         b          c              d         e
 129    methanol     105800   -362.23     0.9379
 130    water        276370   -2090.1     8.125        -0.014116  9.3701e-6
 131    PO           113.08   -0.15085    6.7e-4
 132    PG           58080      445.2                                            ;
 133   
      Specific heat capacity for vapor phase, Cp,v = a + b*( (c/t) / (sinh(d/t)) ) + e*( (f / t) / cosh(f / t) )**2
       
      For PO in J/mol.K : a + b*T + c*power(T,2)
      Actually do I even need this?
 140   
 141  Table cpconv (j, *) "isobaric heat capacity constants for vapor phase"
 142                      a         b          c                 d            e
 143    methanol 0.39252e-5   0.879e-5    1.9165e-3     0.53654e-5        896.7
 144    water    0.33363e-5  0.2679e-5    2.6105e-3     0.08896e-5         1169
 145    PO
 146    PG                                                       ;
 147   
      TRAY, REBOILER, CONDENSER TEMPERATURES
      Define temperatures for the 1 and N-1 trays, reboiler, condenser
      Values obtained from HYSYS simulation
 153   
 154  Scalar
 155           treb 'guess temperature for reboiler'
 156           tbot 'guess temperature for bottom tray'
 157           ttop 'guess temperature for top tray'
 158           tcon 'guess temperature for condenser';
 159   
 160  treb = 359.6;
 161  tbot = 357.5;
 162  ttop = 330.9;
 163  tcon = 326.1;
 164   
      FEED PROPERTIES
      Values obtained from HYSYS simulation
 169   
 170  Scalar
 171           f       'total number of moles of feed'
 172           tf      'temperature of feed in K'
 173           pf      'pressure of feed stream in bar'
 174           vf      'vapor fraction in feed'
 175           shf     'specific enthalpy in feed'
 176           preb    'reboiler pressure'
 177           pbot    '1st tray pressure'
 178           ptop    'N-1 tray pressure'
 179           pcon    'condenser pressure'
 180           fmax    'estimate of maximum flows within system';
 181   
 182  f = 6282;
 183  preb = 2.07;
 184  pbot = 1.97;
 185  ptop = 1.90;
 186  pcon = 1.80;
 187  pf = 18.48;
 188  vf = 0;
 189  fmax = 5000;
 190   
 191  Parameter xf(j) 'mole fractions in feed stream'
 192  /
 193           methanol 0.7515,
 194           water 0.1292,
 195           PO 0.1073,
 196           PG 0.0102      / ;
 197   
 198  * ----------------------------- STEP 3 : MODELLING DISTLLATION COLUMN -----------------------------
      Reboiler (1) ~ Condenser (N)
      Estimated number of trays is 9 from Gilliand correlation
       
      Sets are as follows.
       
               Stages, I = {1, 2... N}; N is estimated from Gilliand correlation.
               Possible locations for feed, i_feed = {i_feed + 1, i_feed + 2... N-1}
               Possible locations for reflux, REF = {i_r_min, i_r_min + 1... N -1}
               Possible locations for boil-up, BU = {2, 3..., i_b_max - 1, i_b_max}
               Feed Location = {i_feed}
               Stages above feed, AF = {i|i_feed < i <= (N-1)}; REF subset of AF
               Stages below feed, BF = {i|2<= i < i_feed}; BU subset of BF
               Corresponding index set, J = {1, 2, ... , c}
       
      OPERATOR ord(i)
      operator 'ord' returns relative position of member in a set
       
      OPERATOR card(i)
      card operator 'card' returns number of elements present in a set
       
      OPERATOR $yes$
      yes$ used to define dynamic sets. dynamic sets have elements that are added/removed during runtime
       
 224   
 225  Set
 226    i              'stages' / 1*9 /
 227    reb(i)         'reboiler'
 228    con(i)         'condenser'
 229    col(i)         'stages in the column excluding reboiler and condenser'
 230    above_feed(i)  'stages above the feed stage, excluding feed stage i.e. possible locations for reflux'
 231    below_feed(i)  'stages below feed stage, including feed stage i.e. possible locations for reboiler'       ;
 232   
 233   
      iref(i)       'stage at which reflux enters'
      ireb(i)       'stage at which reboiler re-entry stream enters';
 238   
 239  Alias(i,i2);
 240  Alias(above_feed, af);
 241  Alias(below_feed, bf);
 242   
 243  Parameter
 244    floc          'feed stage location' / 5 /;
 245   
 246  *assigns first element in dynamic set to reboiler
 247    reb(i) = yes$(ord(i) = 1);
 248   
 249  *assigns last element in dynamic set to condenser
 250    con(i) = yes$(ord(i) = card(i));
 251   
 252  *assigns all other elements in dynamic set to the columns
 253    col(i) = yes - (reb(i) + con(i));
 254   
 255  * assigns stages below feed / above feed to dynamic set
 256    below_feed(i) = yes$( ord(i) le floc ) - reb(i);
 257    above_feed(i) = yes - below_feed(i) - con(i);
 258   
 259  * DEFINE COLUMN PRESSURES
 260   
 261  Parameter
 262    p(i) 'pressure prevailing in tray i';
 263   
 264    p(i)$reb(i) = preb;
 265    p(i)$con(i) = pcon;
 266    p(i)$col(i) = pbot - ( ((pbot - ptop) / card(i) - 1 - 2) ) * (ord(i) - 2);
 267   
 268  Positive Variable
 269    x(i,j)    'mole fraction of component j in liquid on ith tray'
 270    y(i,j)    'mole fraction of component j in vapor on ith tray'
 271    l(i)      'molar flow rate of liquid leaving tray i'
 272    v(i)      'molar flow rate of vapor leaving tray i'
 273    t(i)      'temperature of tray i'
 274    feed(i)   'feed stream entering tray i'
 275    r         'reflux ratio'
 276    p1        'top product rate'
 277    p2        'bottom product rate'
 278    lref(i)   'amount of reflux entering tray i'
 279    lbu(i)    'amount of reboiler stream entering tray i'
 280   
 281  Variable
 282    hl(i)  'molar specific enthalpy of liquid on tray i'
 283    hv(i)  'molar specific enthalpy of vapor on tray i'
 284   
 285  Variable
 286    obj2   'objective function variable to be optimized'       ;
 287   
 288  Binary Variable
 289    zref(i) 'for location of reflux. 1 if i is tray where reflux enters, 0 otherwise.'
 290    zbu(i) 'for location of reboiler stream. 1 if i is tray where reboiler stream enters, 0 otherwise.'
 291   
 292  Equation
 293    phe1(i),phe2(i), phe3(i)        'phase equilibrium relations'
 294    errk(i)       'phase equilibrium error function'
 295   
 296    tmbc(i)       'total material balance for entire column'
 297    tmbf(i)       'total material balance for feed stage'
 298    tmbref(i)     'total material balance for possible candidates for reflux'
 299    tmbreb(i)     'total material balance for possible candidates for boil-up re-entry'
 300    tmbl(i)       'total material balance for reboiler'
 301    defln(i)      'definition of l(n) i.e. l out of condenser'
 302    defp2(i)      'definition of p2 i.e. l out of reboiler'
 303    defvn(i)      'definition of v(n) i.e. v out of condenser, which should be zero'
 304    defref(i)     'definition of reflux re-entering column'
 305   
 306    cmb(i,j)      'component material balance (1 < i < n)'
 307    cmbf(i,j)     'component material balance for feed stage'
 308    cmbref(i,j)   'component material balance for possible stages for reflux'
 309    cmbreb(i,j)   'component material balance for possible stages for boilup reentry'
 310    cmbl(i,j)     'component material balance on first tray'
 311   
 312    defhl(i)      'definition of hl(i)'
 313    defhv(i)      'definition of hv(i)'
 314   
 315    refmax(i)      'limit on reflux stream flow rate'
 316    rebmax(i)      'limit on reboiled vapor flow rate'
 317   
 318    refcheck(i)    'reflux enters on only one tray'
 319    rebcheck(i)    'boilup enters on only one tray'
 320   
 321    eb(i)         'enthalpy balance'
 322    purcon        'purity constraints'
 323    sumf          'sum of feeds'
 324   
 325    obj(i)       'objective function for number of trays'
 326    ;
 327   
      tmb(i)        'total material balance for trays'
      tmbn(i)       'total material balance for condenser'
      cmbn(i,j)     'component material balance for condenser'
      tmb(i)        'total material balance for trays'
 334   
 335  * EQUATION DECLARATION AND DEFINITIONS
 336  * (2) PHASE EQUILIBRIUM RELATIONS fij,v = fij,l
 337  phe1(i) ..    f1l(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO')) =e= f1v(t(i), p(i), y(i,'methanol'),y(i,'water'),y(i,'PO'));
 338  phe2(i) ..    f2l(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO')) =e= f2v(t(i), p(i), y(i,'methanol'),y(i,'water'),y(i,'PO'));
 339  phe3(i) ..    f3l(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO')) =e= f3v(t(i), p(i), y(i,'methanol'),y(i,'water'),y(i,'PO'));
 340   
      Attempted to use VLE equation here, but may not be necessary after including thermodynamic package?
      phe(i,j) ..             y(i,j)*p(i)
                              - x(i,j)*exp(
                                  vpcon(j, 'a')
                                  + (vpcon(j,'b') / t(i))
                                  + (vpcon(j,'c')*ln(t(i)))
                                  + (vpcon(j,'d')*t(i)*exp(vpcon(j,'e')))
                                  ); 
 351   
 352  * (3) PHASE EQUILIBRIUM ERROR
 353  errk(i) ..               sum(j, x(i,j)) - sum(j, y(i,j)) =e= 0;
 354   
 355  * (4) TOTAL MATERIAL BALANCES
 356  * There are a total of 11 material balance equations 1) Entire column
 357  * 2) Reflux 3) After the feed 4) At the feed location 5) Below the feed
 358  * 6) Liquid flow rate from first tray 7) Vapor flow rate from first tray
 359  * 8) Reflux balance 9) Liquid flow rate out of reboiler
 360   
 361  * TMB 4a For Entire Column
 362  tmbc(i)$col(i)..            v(i-1) - (sum(i2, lref(i)) + l(i) + p1) =e= 0;
 363   
 364  * TMB 4b & 4c for stages above the feed excluding condenser, may / may not include reflux stage
 365  tmbref(i)$above_feed(i)..   l(i) + v(i) - l(i+1)- v(i-1) - lref(i)*zref(i) =e= 0;
 366   
 367  * TMB 4d for feed stage balance
 368  tmbf(i) ..                   l(i) + v(i) - l(i+1) -v(i-1) - feed(i)$floc =e= 0;
 369   
 370  * TMB 4e,f for stages below feed excluding reboiler, may / may not include boilup re-entrance
 371  tmbreb(i) ..                l(i) + v(i) - l(i+1)- v(i-1) - lbu(i)*zbu(i) =e= 0;
 372   
 373  * TMB 4g for constraint on reboiler.
 374  tmbl(i)$reb(i) ..           l(i) + v(i) + sum(bf, lbu(i))- l(i+1) =e= 0;
 375   
 376  * TMB 4h for constraint on second product stream = liquid flow rate from reboiler
 377  defp2(i)$reb(i) ..          l(i) - p2 =e= 0;
 378   
 379  * TMB 4i for constraint on condenser. no vapor outflow = total condenser
 380  defvn(i)$con(i) ..          v(i) =e= 0;
 381   
      * TMB condenser. no vapor outlet stream. may serve same purpose as 3i, check!
      tmbn(i)$con(i) ..           l(i) + p1 - v(i-1) =e= 0;
 386   
 387  * TMB 4j for constraint on reflux streams back into column. m.b. on reflux = RR * top product
 388  defref(i)$above_feed(i) ..  sum(i2, lref(i)) - (r * p2) =e= 0 ;
 389   
 390  * TMB 4k Constraint on liquid flow rate out of condenser to reflux ratio of total product stream
 391  defln(i)$con(i) ..          l(i) - (r * p1) =e= 0;
 392   
 393   
 394  * (5) COMPONENT MATERIAL BALANCES
 395  * CMB 5a Entire Column
      Stock Equation
      cmb(i,j)$col(i) ..       l(i)*x(i,j) + v(i)*y(i,j) - l(i+1)*x(i+1, j) - v(i-1)*y(i-1,j) - (feed(i)*xf(j))$floc =e= 0;
 400   
 401  cmb(i,j)$col(i) ..          v(i-1)*y(i-1,j) - (sum(i2,lref(i)) + l(i) + p1) * x(i,j) =e= 0;
 402   
 403  * CMB 5b & 5c for stages above the feed excluding condenser, may / may not include reflux stage
 404  * how to settle liq comp for re-entry
 405  cmbref(i,j)$above_feed(i)..   l(i)*x(i,j) + v(i)*y(i,j) - l(i+1)*x(i,j) - v(i-1)*y(i,j) - (lref(i)*x(i,j))*zref(i) =e= 0;
 406   
 407  * CMB 5d for feed stage
 408  cmbf(i,j) ..                   l(i)*x(i,j) + v(i)*y(i,j) - l(i+1)*x(i,j) - v(i-1)*y(i,j) - (feed(i)*xf(j))$floc =e= 0;
 409   
 410  * CMB 5e,f for stages below feed excluding reboiler, may / may not include boilup re-entrance
 411  cmbreb(i,j) ..                l(i)*x(i,j) + v(i)*y(i,j) - l(i+1)*x(i,j) - v(i-1)*y(i,j) - (lbu(i)*x(i,j))*zbu(i) =e= 0;
 412   
 413  * CMB 5g for constraint on reboiler.
 414  cmbl(i,j)$reb(i) ..           l(i)*x(i,j) + v(i)*y(i,j) + (sum(bf, lbu(i)))*y(i,j) - l(i+1)*x(i+1,j) =e= 0;
 415   
      Unnecessary for now
      * Component Material for Reboiler
      cmbl(i,j)$reb(i) ..         l(i)*x(i,j) + v(i)*y(i,j) - l(i+1)*x(i+1,j) =e= 0;
       
      * Component Material Balance for Condenser
      cmbn(i,j)$con(i) ..      l(i)*x(i,j) + p1*x(i,j) - v(i-1)*y(i-1,j) =e= 0;
 424   
 425  * (6) ENTHALPY BALANCES
 426  * Define equations to calculate enthalpy balances for vapor and liquid on each tray
 427  * Specific heat capacity, CpL = a + b*T +c*power(T,2) + d*power(T,3) + e*power(T,4)
 428  * For PO in J/mol.K : a + b*T + c*power(T,2)
 429   
 430  * Define equations for calculating vapor and liquid enthalpies on each stage
 431  defhl(i).. hl(i) - (h_liq(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO'))) =e= 0;
 432  defhv(i).. hv(i) - (h_vap(t(i), p(i), y(i,'methanol'), y(i,'water'), y(i,'PO'))) =e= 0;
 433   
      may not need this, can use thermodynamic librari
      defhl(i) ..             hl(i) - (cpconl(j,'a') + cpconl(j,'b')*t(i) + cpconl(j,'c')*(t(i)**2) + cpconl(j,'d')*(t(i)**3) + cpconl(j,'e')*(t(i)**4));                   
      defhv(i) ..                
 439   
 440  * EB 6a,6b for possible candidates for reflux, may / may not include reflux stage
 441  * Possible to account for everything in a single equation with conditional statements?
 442  * EB 6c for feed stage, EB 6d, 6e for possible candidates for boilup reentry
 443  * Summarize all into single constraint statement.
 444   
 445  eb(i)$col(i) ..          l(i)*hl(i) + v(i)*hv(i)
 446                          - l(i+1)*hl(i+1) - v(i-1)*hv(i-1)
 447                          - (h_liq(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO'))*lbu(i))*zbu(i)
 448                          - (h_liq(t(i), p(i), x(i,'methanol'), x(i,'water'), x(i,'PO'))*lref(i))*zref(i) =e= 0;
 449   
 450  * (7) REFLUX ENTERS ON ONLY ONE TRAY
 451  * 7a Reflux flow rate is within max limit
 452  refmax(i)..   lref(i) - fmax * zref(i) =l= 0;
 453   
 454  *7b Reflux only enters on a single tray
 455  refcheck(i)..   sum(i2, zref(i)) - 1 =e= 0;
 456   
 457  * (8) REBOILED VAPOR ENTERS ONLY ON ONE TRAY
 458  * 8a Reboiled vapor is within max limit
 459  rebmax(i)..   lbu(i) - fmax * zbu(i) =l= 0;
 460   
 461  * 8b Reboiled vapor enters on a single tray
 462  rebcheck(i)..  sum(i2, zbu(i)) - 1 =e= 0;
 463   
 464  * (9) PRESSURE PROFILES
 465  * 9a - 9e addressed in earlier pressure declaration
 466  * Enter constraints later on when successful compilation has been achieved
 467   
 468  * 9f
 469   
 470  * 9g
 471   
 472  * 9h
 473   
 474  * (10) PURITY CONSTRAINTS
 475  purcon ..            x('9', 'PO') =g= 0.85;
 476   
 477  * SUM OF FEEDS
 478  sumf..              sum(i$floc, feed(i)) =e= f;
 479   
 480  * DECLARING OBJECTIVE FUNCTION
 481  * Objective function is a summation of 1) number of trays in a column and 2) reflux ratio. Therefore optimization instruction will be to minimize the sum of both.
 482  obj(i)..       obj2 =e= r + sum(i2, ord(i)*zref(i));
 483   
 484  * PARAMETER DECLARATIONS
 485  * Reflux Ratio
 486  r.l      = 6;
 487  r.up     = 8;
 488  r.lo     = 3;
 489   
 490  * Top Product Molar Flow Rate
 491  p1.l     = 2000;
 492  p1.up    = 3000;
 493  p1.lo    = 4000;
 494   
 495  * Bottom Product Molar Flow Rate
 496  p2.l     = 4000;
 497  p2.up    = 6000;
 498  p2.lo    = 7000;
 499   
 500  * Vapor Flow Rate
 501  v.l(i)    = ((r.l + 1)*p1.l);
 502   
 503  * Liquid Flow Rate
 504  l.l(i)$reb(i)    = p2.l;
 505  l.l(i)$(below_feed(i)- reb(i)) = p1.l*r.l + (1 - vf)*f;
 506  l.l(i)$above_feed(i) = p1.l*r.l;
 507   
 508  * Temperature
 509  t.l(i)$reb(i)    = treb;
 510  t.l(i)$con(i)    = tcon;
 511  t.l(i)$col(i)    = tbot + (ttop - tbot)*(ord(i) - 2)/(card(i) - 1 - 2);
 512  t.lo(i) = tcon - 10;
 513  t.up(i) = treb + 10;
 514   
 515  * Liquid Mole Fractions
 516  x.up(i,j) = 1.0;
 517  x.l(i,'methanol') = 0.90 - 0.5*(ord(i) - card(i))/(1 - card(i));
 518  x.l(i,'water') = 1 - 0.1 - x.l(i,'water');
 519  x.l(i,'PO') = 0.1;
 520   
 521  * Vapor Mole Fractions
 522  y.up(i,j) = 1.0;
 523  y.l(i,'methanol') = 1.0 - 0.8*(ord(i) - card(i))/(1 - card(i));
 524  y.l(i,'water') = 1 - y.l(i,'water') - 0.1;
 525  y.l(i,'PO') = 0.1
 526   
 527  Model column 'ideal number of stages' / all /;
 528  Solve column using minlp minimizing obj2;
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows - 03/02/19 16:58:52 Page 2
Determining Theoretical Trays Required for Propylene Oxide (PO) Separation
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  D:\Software\GAMS\GAMS Studio Workspace\gamsdir\projdir\opt-po-dist\dist_col.gms
     2       76 FUNCLIBIN      1      76  NRTLideal.dll


COMPILATION TIME     =        0.016 SECONDS      3 MB  25.1.3 r4e34d435fbd WEX-WEI
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows - 03/02/19 16:58:52 Page 3
Determining Theoretical Trays Required for Propylene Oxide (PO) Separation
Equation Listing    SOLVE column Using MINLP From line 528


---- phe1  =E=  

phe1(1)..  (2.70607493067553)*x(1,methanol) + (0.195283146423568)*x(1,water) + (0.918751404571391)*x(1,PO) - (2.07)*y(1,methanol) + (0)*y(1,water) + (0)*y(1,PO) + (0.0446668633486086)*t(1) =E= 0 ; (LHS = 0.936059944508562, INFES = 0.936059944508562 ****)
     
phe1(2)..  (2.42787884504836)*x(2,methanol) + (0.221798439517986)*x(2,water) + (0.906778640248834)*x(2,PO) - (1.97)*y(2,methanol) + (0)*y(2,water) + (0)*y(2,PO) + (0.0474680199675337)*t(2) =E= 0 ; (LHS = 0.822190425425937, INFES = 0.822190425425937 ****)
     
phe1(3)..  (2.02788673095454)*x(3,methanol) + (0.224780133954254)*x(3,water) + (0.821969414592481)*x(3,PO) - (4.96222222222222)*y(3,methanol) + (0)*y(3,water) + (0)*y(3,PO) + (0.0466979940011523)*t(3) =E= 0 ;
     
      (LHS = -0.635749293119677, INFES = 0.635749293119677 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- phe2  =E=  

phe2(1)..  (0.0816869760229898)*x(1,methanol) + (0.604388064816911)*x(1,water) - (0.118937259470346)*x(1,PO) + (0)*y(1,methanol) - (2.07)*y(1,water) + (0)*y(1,PO) + (0.0219000854968641)*t(1) =E= 0 ; (LHS = -1.29826967720262, INFES = 1.29826967720262 ****)
     
phe2(2)..  (0.0824278210059961)*x(2,methanol) + (0.554929034251181)*x(2,water) - (0.123695166024892)*x(2,PO) + (0)*y(2,methanol) - (1.97)*y(2,water) + (0)*y(2,PO) + (0.0206342973648347)*t(2) =E= 0 ; (LHS = -1.24781051856115, INFES = 1.24781051856115 ****)
     
phe2(3)..  (0.0742195570477229)*x(3,methanol) + (0.464502485524437)*x(3,water) - (0.115486748060223)*x(3,PO) + (0)*y(3,methanol) - (4.96222222222222)*y(3,water) + (0)*y(3,PO) + (0.0180020883145531)*t(3) =E= 0 ;
     
      (LHS = -4.02053117038398, INFES = 4.02053117038398 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- phe3  =E=  phase equilibrium relations

phe3(1)..  (0.867980736628913)*x(1,methanol) - (0.268622225499685)*x(1,water) + (11.7002265649973)*x(1,PO) + (0)*y(1,methanol) + (0)*y(1,water) - (2.07)*y(1,PO) + (0.0304233799409378)*t(1) =E= 0 ; (LHS = 1.06845494820158, INFES = 1.06845494820158 ****)
     
phe3(2)..  (0.810822084526158)*x(2,methanol) - (0.297619705403112)*x(2,water) + (11.5649720285176)*x(2,PO) + (0)*y(2,methanol) + (0)*y(2,water) - (1.97)*y(2,PO) + (0.0304573951891276)*t(2) =E= 0 ; (LHS = 1.06664468208231, INFES = 1.06664468208231 ****)
     
phe3(3)..  (0.723818313666545)*x(3,methanol) - (0.307996392289254)*x(3,water) + (10.8523141305182)*x(3,PO) + (0)*y(3,methanol) + (0)*y(3,water) - (4.96222222222222)*y(3,PO) + (0.029399280576835)*t(3) =E= 0 ;
     
      (LHS = 0.691817052444201, INFES = 0.691817052444201 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- errk  =E=  phase equilibrium error function

errk(1)..  x(1,methanol) + x(1,water) + x(1,PO) + x(1,PG) - y(1,methanol) - y(1,water) - y(1,PO) - y(1,PG) =E= 0 ; (LHS = 0.2, INFES = 0.2 ****)
     
errk(2)..  x(2,methanol) + x(2,water) + x(2,PO) + x(2,PG) - y(2,methanol) - y(2,water) - y(2,PO) - y(2,PG) =E= 0 ; (LHS = 0.1625, INFES = 0.1625 ****)
     
errk(3)..  x(3,methanol) + x(3,water) + x(3,PO) + x(3,PG) - y(3,methanol) - y(3,water) - y(3,PO) - y(3,PG) =E= 0 ; (LHS = 0.125, INFES = 0.125 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- tmbc  =E=  total material balance for entire column

tmbc(2)..  - l(2) + v(1) - p1 - 9*lref(2) =E= 0 ; (LHS = -8282, INFES = 8282 ****)
     
tmbc(3)..  - l(3) + v(2) - p1 - 9*lref(3) =E= 0 ; (LHS = -8282, INFES = 8282 ****)
     
tmbc(4)..  - l(4) + v(3) - p1 - 9*lref(4) =E= 0 ; (LHS = -8282, INFES = 8282 ****)
     
REMAINING 4 ENTRIES SKIPPED


---- tmbf  =E=  total material balance for feed stage

tmbf(1)..  l(1) - l(2) + v(1) - feed(1) =E= 0 ; (LHS = 7718, INFES = 7718 ****)
     
tmbf(2)..  l(2) - l(3) - v(1) + v(2) - feed(2) =E= 0 ; (LHS = 0)
     
tmbf(3)..  l(3) - l(4) - v(2) + v(3) - feed(3) =E= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- tmbref  =E=  total material balance for possible candidates for reflux

tmbref(1)..  l(1) - l(2) + v(1) + (0)*lref(1) + (0)*zref(1) =E= 0 ; (LHS = 7718, INFES = 7718 ****)
     
tmbref(6)..  l(6) - l(7) - v(5) + v(6) + (0)*lref(6) + (0)*zref(6) =E= 0 ; (LHS = 0)
     
tmbref(7)..  l(7) - l(8) - v(6) + v(7) + (0)*lref(7) + (0)*zref(7) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- tmbreb  =E=  total material balance for possible candidates for boil-up re-entry

tmbreb(1)..  l(1) - l(2) + v(1) + (0)*lbu(1) + (0)*zbu(1) =E= 0 ; (LHS = 7718, INFES = 7718 ****)
     
tmbreb(2)..  l(2) - l(3) - v(1) + v(2) + (0)*lbu(2) + (0)*zbu(2) =E= 0 ; (LHS = 0)
     
tmbreb(3)..  l(3) - l(4) - v(2) + v(3) + (0)*lbu(3) + (0)*zbu(3) =E= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- tmbl  =E=  total material balance for reboiler

tmbl(1)..  l(1) - l(2) + v(1) + 4*lbu(1) =E= 0 ; (LHS = 7718, INFES = 7718 ****)
     

---- defln  =E=  definition of l(n) i.e. l out of condenser

defln(9)..  l(9) - (4000)*r - (6)*p1 =E= 0 ; (LHS = -24000, INFES = 24000 ****)
     

---- defp2  =E=  definition of p2 i.e. l out of reboiler

defp2(1)..  l(1) - p2 =E= 0 ; (LHS = 5000, INFES = 5000 ****)
     

---- defvn  =E=  definition of v(n) i.e. v out of condenser, which should be zero

defvn(9)..  v(9) =E= 0 ; (LHS = 14000, INFES = 14000 ****)
     

---- defref  =E=  definition of reflux re-entering column

defref(1)..  - (7000)*r - (6)*p2 + 9*lref(1) =E= 0 ; (LHS = -42000, INFES = 42000 ****)
     
defref(6)..  - (7000)*r - (6)*p2 + 9*lref(6) =E= 0 ; (LHS = -42000, INFES = 42000 ****)
     
defref(7)..  - (7000)*r - (6)*p2 + 9*lref(7) =E= 0 ; (LHS = -42000, INFES = 42000 ****)
     
REMAINING ENTRY SKIPPED


---- cmb  =E=  component material balance (1 < i < n)

cmb(2,methanol)..  - (22282)*x(2,methanol) + (14000)*y(1,methanol) - (0.4625)*l(2) + (0.2)*v(1) - (0.4625)*p1 - (4.1625)*lref(2) =E= 0 ; (LHS = -7505.425, INFES = 7505.425 ****)
     
cmb(2,water)..  - (22282)*x(2,water) + (14000)*y(1,water) - (0.9)*l(2) + (0.9)*v(1) - (0.9)*p1 - (8.1)*lref(2) =E= 0 ; (LHS = -7453.8, INFES = 7453.8 ****)
     
cmb(2,PO)..  - (22282)*x(2,PO) + (14000)*y(1,PO) - (0.1)*l(2) + (0.1)*v(1) - (0.1)*p1 - (0.9)*lref(2) =E= 0 ; (LHS = -828.2, INFES = 828.2 ****)
     
REMAINING 25 ENTRIES SKIPPED


---- cmbf  =E=  component material balance for feed stage

cmbf(1,methanol)..  - (6282)*x(1,methanol) + (14000)*y(1,methanol) + (0.4)*l(1) - (0.4)*l(2) + (0.2)*v(1) - 0.7515*feed(1) =E= 0 ; (LHS = 287.2, INFES = 287.2 ****)
     
cmbf(1,water)..  - (6282)*x(1,water) + (14000)*y(1,water) + (0.9)*l(1) - (0.9)*l(2) + (0.9)*v(1) - 0.1292*feed(1) =E= 0 ; (LHS = 6946.2, INFES = 6946.2 ****)
     
cmbf(1,PO)..  - (6282)*x(1,PO) + (14000)*y(1,PO) + (0.1)*l(1) - (0.1)*l(2) + (0.1)*v(1) - 0.1073*feed(1) =E= 0 ; (LHS = 771.8, INFES = 771.8 ****)
     
REMAINING 33 ENTRIES SKIPPED


---- cmbref  =E=  component material balance for possible stages for reflux

cmbref(1,methanol)..  - (6282)*x(1,methanol) + (14000)*y(1,methanol) + (0.4)*l(1) - (0.4)*l(2) + (0.2)*v(1) + (0)*lref(1) + (0)*zref(1) =E= 0 ; (LHS = 287.2, INFES = 287.2 ****)
     
cmbref(1,water)..  - (6282)*x(1,water) + (14000)*y(1,water) + (0.9)*l(1) - (0.9)*l(2) + (0.9)*v(1) + (0)*lref(1) + (0)*zref(1) =E= 0 ; (LHS = 6946.2, INFES = 6946.2 ****)
     
cmbref(1,PO)..  - (6282)*x(1,PO) + (14000)*y(1,PO) + (0.1)*l(1) - (0.1)*l(2) + (0.1)*v(1) + (0)*lref(1) + (0)*zref(1) =E= 0 ; (LHS = 771.8, INFES = 771.8 ****)
     
REMAINING 13 ENTRIES SKIPPED


---- cmbreb  =E=  component material balance for possible stages for boilup reentry

cmbreb(1,methanol)..  - (6282)*x(1,methanol) + (14000)*y(1,methanol) + (0.4)*l(1) - (0.4)*l(2) + (0.2)*v(1) + (0)*lbu(1) + (0)*zbu(1) =E= 0 ; (LHS = 287.2, INFES = 287.2 ****)
     
cmbreb(1,water)..  - (6282)*x(1,water) + (14000)*y(1,water) + (0.9)*l(1) - (0.9)*l(2) + (0.9)*v(1) + (0)*lbu(1) + (0)*zbu(1) =E= 0 ; (LHS = 6946.2, INFES = 6946.2 ****)
     
cmbreb(1,PO)..  - (6282)*x(1,PO) + (14000)*y(1,PO) + (0.1)*l(1) - (0.1)*l(2) + (0.1)*v(1) + (0)*lbu(1) + (0)*zbu(1) =E= 0 ; (LHS = 771.8, INFES = 771.8 ****)
     
REMAINING 33 ENTRIES SKIPPED


---- cmbl  =E=  component material balance on first tray

cmbl(1,methanol)..  (12000)*x(1,methanol) - (18282)*x(2,methanol) + (14000)*y(1,methanol) + (0.4)*l(1) - (0.4625)*l(2) + (0.2)*v(1) + (0.8)*lbu(1) =E= 0 ; (LHS = -855.425000000001, INFES = 855.425000000001 ****)
     
cmbl(1,water)..  (12000)*x(1,water) - (18282)*x(2,water) + (14000)*y(1,water) + (0.9)*l(1) - (0.9)*l(2) + (0.9)*v(1) + (3.6)*lbu(1) =E= 0 ; (LHS = 6946.2, INFES = 6946.2 ****)
     
cmbl(1,PO)..  (12000)*x(1,PO) - (18282)*x(2,PO) + (14000)*y(1,PO) + (0.1)*l(1) - (0.1)*l(2) + (0.1)*v(1) + (0.4)*lbu(1) =E= 0 ; (LHS = 771.8, INFES = 771.8 ****)
     
REMAINING ENTRY SKIPPED


---- defhl  =E=  definition of hl(i)

defhl(1)..  (230974.468608388)*x(1,methanol) + (281091.533427617)*x(1,water) + (111897.515503776)*x(1,PO) - (136.306996917324)*t(1) + hl(1) =E= 0 ; (LHS = 356561.919078588, INFES = 356561.919078588 ****)
     
defhl(2)..  (231290.906123397)*x(2,methanol) + (281239.440088558)*x(2,water) + (112137.717028813)*x(2,PO) - (143.256287479969)*t(2) + hl(2) =E= 0 ; (LHS = 371301.311864655, INFES = 371301.311864655 ****)
     
defhl(3)..  (231881.158437813)*x(3,methanol) + (281568.484927478)*x(3,water) + (112747.434086197)*x(3,PO) - (149.263515984114)*t(3) + hl(3) =E= 0 ; (LHS = 386423.988023202, INFES = 386423.988023202 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- defhv  =E=  definition of hv(i)

defhv(1)..  (198092.757742329)*y(1,methanol) + (239737.795782624)*y(1,water) + (88820.8339694787)*y(1,PO) - (48.8423292642413)*t(1) + hv(1) =E= 0 ; (LHS = 264264.651149776, INFES = 264264.651149776 ****)
     
defhv(2)..  (198194.523737204)*y(2,methanol) + (239809.168298236)*y(2,water) + (88999.7684834936)*y(2,PO) - (53.5977405179535)*t(2) + hv(2) =E= 0 ; (LHS = 284186.585437923, INFES = 284186.585437923 ****)
     
defhv(3)..  (198408.293458467)*y(3,methanol) + (239959.739403863)*y(3,water) + (89374.8913566103)*y(3,PO) - (58.1961395256163)*t(3) + hv(3) =E= 0 ; (LHS = 304264.571982525, INFES = 304264.571982525 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- refmax  =L=  limit on reflux stream flow rate

refmax(1)..  lref(1) - 5000*zref(1) =L= 0 ; (LHS = 0)
     
refmax(2)..  lref(2) - 5000*zref(2) =L= 0 ; (LHS = 0)
     
refmax(3)..  lref(3) - 5000*zref(3) =L= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- rebmax  =L=  limit on reboiled vapor flow rate

rebmax(1)..  lbu(1) - 5000*zbu(1) =L= 0 ; (LHS = 0)
     
rebmax(2)..  lbu(2) - 5000*zbu(2) =L= 0 ; (LHS = 0)
     
rebmax(3)..  lbu(3) - 5000*zbu(3) =L= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- refcheck  =E=  reflux enters on only one tray

refcheck(1)..  9*zref(1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
refcheck(2)..  9*zref(2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
refcheck(3)..  9*zref(3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- rebcheck  =E=  boilup enters on only one tray

rebcheck(1)..  9*zbu(1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
rebcheck(2)..  9*zbu(2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
rebcheck(3)..  9*zbu(3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- eb  =E=  enthalpy balance

eb(2)..  (0)*x(2,methanol) + (0)*x(2,water) + (0)*x(2,PO) + (0)*l(2) + (0)*l(3) + (0)*v(1) + (0)*v(2) + (0)*t(2) + (0)*lref(2) + (0)*lbu(2) + (18282)*hl(2) - (18282)*hl(3) - (14000)*hv(1) + (14000)*hv(2) + (0)*zref(2) + (0)*zbu(2) =E= 0 ; (LHS = 0)
     
eb(3)..  (0)*x(3,methanol) + (0)*x(3,water) + (0)*x(3,PO) + (0)*l(3) + (0)*l(4) + (0)*v(2) + (0)*v(3) + (0)*t(3) + (0)*lref(3) + (0)*lbu(3) + (18282)*hl(3) - (18282)*hl(4) - (14000)*hv(2) + (14000)*hv(3) + (0)*zref(3) + (0)*zbu(3) =E= 0 ; (LHS = 0)
     
eb(4)..  (0)*x(4,methanol) + (0)*x(4,water) + (0)*x(4,PO) + (0)*l(4) + (0)*l(5) + (0)*v(3) + (0)*v(4) + (0)*t(4) + (0)*lref(4) + (0)*lbu(4) + (18282)*hl(4) - (18282)*hl(5) - (14000)*hv(3) + (14000)*hv(4) + (0)*zref(4) + (0)*zbu(4) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- purcon  =G=  purity constraints

purcon..  x(9,PO) =G= 0.85 ; (LHS = 0.1, INFES = 0.75 ****)
     

---- sumf  =E=  sum of feeds

sumf..  feed(1) + feed(2) + feed(3) + feed(4) + feed(5) + feed(6) + feed(7) + feed(8) + feed(9) =E= 6282 ; (LHS = 0, INFES = 6282 ****)
     

---- obj  =E=  objective function for number of trays

obj(1)..  - r + obj2 - 9*zref(1) =E= 0 ; (LHS = -6, INFES = 6 ****)
     
obj(2)..  - r + obj2 - 18*zref(2) =E= 0 ; (LHS = -6, INFES = 6 ****)
     
obj(3)..  - r + obj2 - 27*zref(3) =E= 0 ; (LHS = -6, INFES = 6 ****)
     
REMAINING 6 ENTRIES SKIPPED

GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows - 03/02/19 16:58:52 Page 4
Determining Theoretical Trays Required for Propylene Oxide (PO) Separation
Column Listing      SOLVE column Using MINLP From line 528


---- x  mole fraction of component j in liquid on ith tray

x(1,methanol)
                (.LO, .L, .UP, .M = 0, 0.4, 1, 0)
       (2.7061) phe1(1)
       (0.0817) phe2(1)
       (0.868)  phe3(1)
        1       errk(1)
   (-6282)      cmbf(1,methanol)
   (-6282)      cmbref(1,methanol)
   (-6282)      cmbreb(1,methanol)
   (12000)      cmbl(1,methanol)
  (230974.4686) defhl(1)

x(1,water)
                (.LO, .L, .UP, .M = 0, 0.9, 1, 0)
       (0.1953) phe1(1)
       (0.6044) phe2(1)
      (-0.2686) phe3(1)
        1       errk(1)
   (-6282)      cmbf(1,water)
   (-6282)      cmbref(1,water)
   (-6282)      cmbreb(1,water)
   (12000)      cmbl(1,water)
  (281091.5334) defhl(1)

x(1,PO)
                (.LO, .L, .UP, .M = 0, 0.1, 1, 0)
       (0.9188) phe1(1)
      (-0.1189) phe2(1)
      (11.7002) phe3(1)
        1       errk(1)
   (-6282)      cmbf(1,PO)
   (-6282)      cmbref(1,PO)
   (-6282)      cmbreb(1,PO)
   (12000)      cmbl(1,PO)
  (111897.5155) defhl(1)

REMAINING 33 ENTRIES SKIPPED

---- y  mole fraction of component j in vapor on ith tray

y(1,methanol)
                (.LO, .L, .UP, .M = 0, 0.2, 1, 0)
      (-2.07)   phe1(1)
       (0)      phe2(1)
       (0)      phe3(1)
       -1       errk(1)
   (14000)      cmb(2,methanol)
   (14000)      cmbf(1,methanol)
   (14000)      cmbref(1,methanol)
   (14000)      cmbreb(1,methanol)
   (14000)      cmbl(1,methanol)
  (198092.7577) defhv(1)

y(1,water)
                (.LO, .L, .UP, .M = 0, 0.9, 1, 0)
       (0)      phe1(1)
      (-2.07)   phe2(1)
       (0)      phe3(1)
       -1       errk(1)
   (14000)      cmb(2,water)
   (14000)      cmbf(1,water)
   (14000)      cmbref(1,water)
   (14000)      cmbreb(1,water)
   (14000)      cmbl(1,water)
  (239737.7958) defhv(1)

y(1,PO)
                (.LO, .L, .UP, .M = 0, 0.1, 1, 0)
       (0)      phe1(1)
       (0)      phe2(1)
      (-2.07)   phe3(1)
       -1       errk(1)
   (14000)      cmb(2,PO)
   (14000)      cmbf(1,PO)
   (14000)      cmbref(1,PO)
   (14000)      cmbreb(1,PO)
   (14000)      cmbl(1,PO)
   (88820.834)  defhv(1)

REMAINING 33 ENTRIES SKIPPED

---- l  molar flow rate of liquid leaving tray i

l(1)
                (.LO, .L, .UP, .M = 0, 12000, +INF, 0)
        1       tmbf(1)
        1       tmbref(1)
        1       tmbreb(1)
        1       tmbl(1)
        1       defp2(1)
       (0.4)    cmbf(1,methanol)
       (0.9)    cmbf(1,water)
       (0.1)    cmbf(1,PO)
       (0)      cmbf(1,PG)
       (0.4)    cmbref(1,methanol)
       (0.9)    cmbref(1,water)
       (0.1)    cmbref(1,PO)
       (0)      cmbref(1,PG)
       (0.4)    cmbreb(1,methanol)
       (0.9)    cmbreb(1,water)
       (0.1)    cmbreb(1,PO)
       (0)      cmbreb(1,PG)
       (0.4)    cmbl(1,methanol)
       (0.9)    cmbl(1,water)
       (0.1)    cmbl(1,PO)
       (0)      cmbl(1,PG)

l(2)
                (.LO, .L, .UP, .M = 0, 18282, +INF, 0)
       -1       tmbc(2)
       -1       tmbf(1)
        1       tmbf(2)
       -1       tmbref(1)
       -1       tmbreb(1)
        1       tmbreb(2)
       -1       tmbl(1)
      (-0.4625) cmb(2,methanol)
      (-0.9)    cmb(2,water)
      (-0.1)    cmb(2,PO)
       (0)      cmb(2,PG)
      (-0.4)    cmbf(1,methanol)
      (-0.9)    cmbf(1,water)
      (-0.1)    cmbf(1,PO)
       (0)      cmbf(1,PG)
       (0.4625) cmbf(2,methanol)
       (0.9)    cmbf(2,water)
       (0.1)    cmbf(2,PO)
       (0)      cmbf(2,PG)
      (-0.4)    cmbref(1,methanol)
      (-0.9)    cmbref(1,water)
      (-0.1)    cmbref(1,PO)
       (0)      cmbref(1,PG)
      (-0.4)    cmbreb(1,methanol)
      (-0.9)    cmbreb(1,water)
      (-0.1)    cmbreb(1,PO)
       (0)      cmbreb(1,PG)
       (0.4625) cmbreb(2,methanol)
       (0.9)    cmbreb(2,water)
       (0.1)    cmbreb(2,PO)
       (0)      cmbreb(2,PG)
      (-0.4625) cmbl(1,methanol)
      (-0.9)    cmbl(1,water)
      (-0.1)    cmbl(1,PO)
       (0)      cmbl(1,PG)
       (0)      eb(2)

l(3)
                (.LO, .L, .UP, .M = 0, 18282, +INF, 0)
       -1       tmbc(3)
       -1       tmbf(2)
        1       tmbf(3)
       -1       tmbreb(2)
        1       tmbreb(3)
      (-0.525)  cmb(3,methanol)
      (-0.9)    cmb(3,water)
      (-0.1)    cmb(3,PO)
       (0)      cmb(3,PG)
      (-0.4625) cmbf(2,methanol)
      (-0.9)    cmbf(2,water)
      (-0.1)    cmbf(2,PO)
       (0)      cmbf(2,PG)
       (0.525)  cmbf(3,methanol)
       (0.9)    cmbf(3,water)
       (0.1)    cmbf(3,PO)
       (0)      cmbf(3,PG)
      (-0.4625) cmbreb(2,methanol)
      (-0.9)    cmbreb(2,water)
      (-0.1)    cmbreb(2,PO)
       (0)      cmbreb(2,PG)
       (0.525)  cmbreb(3,methanol)
       (0.9)    cmbreb(3,water)
       (0.1)    cmbreb(3,PO)
       (0)      cmbreb(3,PG)
       (0)      eb(2)
       (0)      eb(3)

REMAINING 6 ENTRIES SKIPPED

---- v  molar flow rate of vapor leaving tray i

v(1)
                (.LO, .L, .UP, .M = 0, 14000, +INF, 0)
        1       tmbc(2)
        1       tmbf(1)
       -1       tmbf(2)
        1       tmbref(1)
        1       tmbreb(1)
       -1       tmbreb(2)
        1       tmbl(1)
       (0.2)    cmb(2,methanol)
       (0.9)    cmb(2,water)
       (0.1)    cmb(2,PO)
       (0)      cmb(2,PG)
       (0.2)    cmbf(1,methanol)
       (0.9)    cmbf(1,water)
       (0.1)    cmbf(1,PO)
       (0)      cmbf(1,PG)
      (-0.3)    cmbf(2,methanol)
      (-0.9)    cmbf(2,water)
      (-0.1)    cmbf(2,PO)
       (0)      cmbf(2,PG)
       (0.2)    cmbref(1,methanol)
       (0.9)    cmbref(1,water)
       (0.1)    cmbref(1,PO)
       (0)      cmbref(1,PG)
       (0.2)    cmbreb(1,methanol)
       (0.9)    cmbreb(1,water)
       (0.1)    cmbreb(1,PO)
       (0)      cmbreb(1,PG)
      (-0.3)    cmbreb(2,methanol)
      (-0.9)    cmbreb(2,water)
      (-0.1)    cmbreb(2,PO)
       (0)      cmbreb(2,PG)
       (0.2)    cmbl(1,methanol)
       (0.9)    cmbl(1,water)
       (0.1)    cmbl(1,PO)
       (0)      cmbl(1,PG)
       (0)      eb(2)

v(2)
                (.LO, .L, .UP, .M = 0, 14000, +INF, 0)
        1       tmbc(3)
        1       tmbf(2)
       -1       tmbf(3)
        1       tmbreb(2)
       -1       tmbreb(3)
       (0.3)    cmb(3,methanol)
       (0.9)    cmb(3,water)
       (0.1)    cmb(3,PO)
       (0)      cmb(3,PG)
       (0.3)    cmbf(2,methanol)
       (0.9)    cmbf(2,water)
       (0.1)    cmbf(2,PO)
       (0)      cmbf(2,PG)
      (-0.4)    cmbf(3,methanol)
      (-0.9)    cmbf(3,water)
      (-0.1)    cmbf(3,PO)
       (0)      cmbf(3,PG)
       (0.3)    cmbreb(2,methanol)
       (0.9)    cmbreb(2,water)
       (0.1)    cmbreb(2,PO)
       (0)      cmbreb(2,PG)
      (-0.4)    cmbreb(3,methanol)
      (-0.9)    cmbreb(3,water)
      (-0.1)    cmbreb(3,PO)
       (0)      cmbreb(3,PG)
       (0)      eb(2)
       (0)      eb(3)

v(3)
                (.LO, .L, .UP, .M = 0, 14000, +INF, 0)
        1       tmbc(4)
        1       tmbf(3)
       -1       tmbf(4)
        1       tmbreb(3)
       -1       tmbreb(4)
       (0.4)    cmb(4,methanol)
       (0.9)    cmb(4,water)
       (0.1)    cmb(4,PO)
       (0)      cmb(4,PG)
       (0.4)    cmbf(3,methanol)
       (0.9)    cmbf(3,water)
       (0.1)    cmbf(3,PO)
       (0)      cmbf(3,PG)
      (-0.5)    cmbf(4,methanol)
      (-0.9)    cmbf(4,water)
      (-0.1)    cmbf(4,PO)
       (0)      cmbf(4,PG)
       (0.4)    cmbreb(3,methanol)
       (0.9)    cmbreb(3,water)
       (0.1)    cmbreb(3,PO)
       (0)      cmbreb(3,PG)
      (-0.5)    cmbreb(4,methanol)
      (-0.9)    cmbreb(4,water)
      (-0.1)    cmbreb(4,PO)
       (0)      cmbreb(4,PG)
       (0)      eb(3)
       (0)      eb(4)

REMAINING 6 ENTRIES SKIPPED

---- t  temperature of tray i

t(1)
                (.LO, .L, .UP, .M = 316.1, 359.6, 369.6, 0)
       (0.0447) phe1(1)
       (0.0219) phe2(1)
       (0.0304) phe3(1)
    (-136.307)  defhl(1)
     (-48.8423) defhv(1)

t(2)
                (.LO, .L, .UP, .M = 316.1, 357.5, 369.6, 0)
       (0.0475) phe1(2)
       (0.0206) phe2(2)
       (0.0305) phe3(2)
    (-143.2563) defhl(2)
     (-53.5977) defhv(2)
       (0)      eb(2)

t(3)
                (.LO, .L, .UP, .M = 316.1, 353.066666666667, 369.6, 0)
       (0.0467) phe1(3)
       (0.018)  phe2(3)
       (0.0294) phe3(3)
    (-149.2635) defhl(3)
     (-58.1961) defhv(3)
       (0)      eb(3)

REMAINING 6 ENTRIES SKIPPED

---- feed  feed stream entering tray i

feed(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       tmbf(1)
       -0.7515  cmbf(1,methanol)
       -0.1292  cmbf(1,water)
       -0.1073  cmbf(1,PO)
       -0.0102  cmbf(1,PG)
        1       sumf

feed(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       tmbf(2)
       -0.7515  cmbf(2,methanol)
       -0.1292  cmbf(2,water)
       -0.1073  cmbf(2,PO)
       -0.0102  cmbf(2,PG)
        1       sumf

feed(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       tmbf(3)
       -0.7515  cmbf(3,methanol)
       -0.1292  cmbf(3,water)
       -0.1073  cmbf(3,PO)
       -0.0102  cmbf(3,PG)
        1       sumf

REMAINING 6 ENTRIES SKIPPED

---- r  reflux ratio

r
                (.LO, .L, .UP, .M = 3, 6, 8, 0)
   (-4000)      defln(9)
   (-7000)      defref(1)
   (-7000)      defref(6)
   (-7000)      defref(7)
   (-7000)      defref(8)
       -1       obj(1)
       -1       obj(2)
       -1       obj(3)
       -1       obj(4)
       -1       obj(5)
       -1       obj(6)
       -1       obj(7)
       -1       obj(8)
       -1       obj(9)


---- p1  top product rate

p1
                (.LO, .L, .UP, .M = 4000, 4000, 3000, 0)
       -1       tmbc(2)
       -1       tmbc(3)
       -1       tmbc(4)
       -1       tmbc(5)
       -1       tmbc(6)
       -1       tmbc(7)
       -1       tmbc(8)
      (-6)      defln(9)
      (-0.4625) cmb(2,methanol)
      (-0.9)    cmb(2,water)
      (-0.1)    cmb(2,PO)
       (0)      cmb(2,PG)
      (-0.525)  cmb(3,methanol)
      (-0.9)    cmb(3,water)
      (-0.1)    cmb(3,PO)
       (0)      cmb(3,PG)
      (-0.5875) cmb(4,methanol)
      (-0.9)    cmb(4,water)
      (-0.1)    cmb(4,PO)
       (0)      cmb(4,PG)
      (-0.65)   cmb(5,methanol)
      (-0.9)    cmb(5,water)
      (-0.1)    cmb(5,PO)
       (0)      cmb(5,PG)
      (-0.7125) cmb(6,methanol)
      (-0.9)    cmb(6,water)
      (-0.1)    cmb(6,PO)
       (0)      cmb(6,PG)
      (-0.775)  cmb(7,methanol)
      (-0.9)    cmb(7,water)
      (-0.1)    cmb(7,PO)
       (0)      cmb(7,PG)
      (-0.8375) cmb(8,methanol)
      (-0.9)    cmb(8,water)
      (-0.1)    cmb(8,PO)
       (0)      cmb(8,PG)
     2000       (OLD LEVEL ****)


---- p2  bottom product rate

p2
                (.LO, .L, .UP, .M = 7000, 7000, 6000, 0)
       -1       defp2(1)
      (-6)      defref(1)
      (-6)      defref(6)
      (-6)      defref(7)
      (-6)      defref(8)
     4000       (OLD LEVEL ****)


---- lref  amount of reflux entering tray i

lref(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tmbref(1)
        9       defref(1)
       (0)      cmbref(1,methanol)
       (0)      cmbref(1,water)
       (0)      cmbref(1,PO)
       (0)      cmbref(1,PG)
        1       refmax(1)

lref(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -9       tmbc(2)
      (-4.1625) cmb(2,methanol)
      (-8.1)    cmb(2,water)
      (-0.9)    cmb(2,PO)
       (0)      cmb(2,PG)
        1       refmax(2)
       (0)      eb(2)

lref(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -9       tmbc(3)
      (-4.725)  cmb(3,methanol)
      (-8.1)    cmb(3,water)
      (-0.9)    cmb(3,PO)
       (0)      cmb(3,PG)
        1       refmax(3)
       (0)      eb(3)

REMAINING 6 ENTRIES SKIPPED

---- lbu  amount of reboiler stream entering tray i

lbu(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tmbreb(1)
        4       tmbl(1)
       (0)      cmbreb(1,methanol)
       (0)      cmbreb(1,water)
       (0)      cmbreb(1,PO)
       (0)      cmbreb(1,PG)
       (0.8)    cmbl(1,methanol)
       (3.6)    cmbl(1,water)
       (0.4)    cmbl(1,PO)
       (0)      cmbl(1,PG)
        1       rebmax(1)

lbu(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tmbreb(2)
       (0)      cmbreb(2,methanol)
       (0)      cmbreb(2,water)
       (0)      cmbreb(2,PO)
       (0)      cmbreb(2,PG)
        1       rebmax(2)
       (0)      eb(2)

lbu(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tmbreb(3)
       (0)      cmbreb(3,methanol)
       (0)      cmbreb(3,water)
       (0)      cmbreb(3,PO)
       (0)      cmbreb(3,PG)
        1       rebmax(3)
       (0)      eb(3)

REMAINING 6 ENTRIES SKIPPED

---- hl  molar specific enthalpy of liquid on tray i

hl(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhl(1)

hl(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhl(2)
   (18282)      eb(2)

hl(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhl(3)
  (-18282)      eb(2)
   (18282)      eb(3)

REMAINING 6 ENTRIES SKIPPED

---- hv  molar specific enthalpy of vapor on tray i

hv(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhv(1)
  (-14000)      eb(2)

hv(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhv(2)
   (14000)      eb(2)
  (-14000)      eb(3)

hv(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defhv(3)
   (14000)      eb(3)
  (-14000)      eb(4)

REMAINING 6 ENTRIES SKIPPED

---- obj2  objective function variable to be optimized

obj2
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj(1)
        1       obj(2)
        1       obj(3)
        1       obj(4)
        1       obj(5)
        1       obj(6)
        1       obj(7)
        1       obj(8)
        1       obj(9)


---- zref  for location of reflux. 1 if i is tray where reflux enters, 0 otherwise.

zref(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       (0)      tmbref(1)
       (0)      cmbref(1,methanol)
       (0)      cmbref(1,water)
       (0)      cmbref(1,PO)
       (0)      cmbref(1,PG)
    -5000       refmax(1)
        9       refcheck(1)
       -9       obj(1)

zref(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    -5000       refmax(2)
        9       refcheck(2)
       (0)      eb(2)
      -18       obj(2)

zref(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    -5000       refmax(3)
        9       refcheck(3)
       (0)      eb(3)
      -27       obj(3)

REMAINING 6 ENTRIES SKIPPED

---- zbu  for location of reboiler stream. 1 if i is tray where reboiler stream enters, 0 otherwise.

zbu(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       (0)      tmbreb(1)
       (0)      cmbreb(1,methanol)
       (0)      cmbreb(1,water)
       (0)      cmbreb(1,PO)
       (0)      cmbreb(1,PG)
    -5000       rebmax(1)
        9       rebcheck(1)

zbu(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       (0)      tmbreb(2)
       (0)      cmbreb(2,methanol)
       (0)      cmbreb(2,water)
       (0)      cmbreb(2,PO)
       (0)      cmbreb(2,PG)
    -5000       rebmax(2)
        9       rebcheck(2)
       (0)      eb(2)

zbu(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       (0)      tmbreb(3)
       (0)      cmbreb(3,methanol)
       (0)      cmbreb(3,water)
       (0)      cmbreb(3,PO)
       (0)      cmbreb(3,PG)
    -5000       rebmax(3)
        9       rebcheck(3)
       (0)      eb(3)

REMAINING 6 ENTRIES SKIPPED

**** Matrix error - lower bound > upper bound
p1   (.LO, .L, .UP = 4000, 2000, 3000)

**** Matrix error - lower bound > upper bound
p2   (.LO, .L, .UP = 7000, 4000, 6000)
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows - 03/02/19 16:58:52 Page 5
Determining Theoretical Trays Required for Propylene Oxide (PO) Separation
Model Statistics    SOLVE column Using MINLP From line 528


MODEL STATISTICS

BLOCKS OF EQUATIONS          28     SINGLE EQUATIONS          265
BLOCKS OF VARIABLES          16     SINGLE VARIABLES          166  2 projected
NON ZERO ELEMENTS         1,566     NON LINEAR N-Z          1,217
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH               2,588     DISCRETE VARIABLES         18



**** THE MODEL EXCEEDS THE DEMO LIMITS
**** MAX MATRIX ROWS          300
**** MAX MATRIX COLUMNS       300
**** MAX NON ZERO ELEMENTS   2000
**** MAX NON LINEAR N-Z      1000
**** MAX DISCRETE VARIABLES    50
**** Terminated due to a licensing error

     GAMS Development Corporation, USA              G871201/0000CA-ANY
     Free Demo, +1 202-342-0180, support@gams.com, www.gams.com       
     10522320000S                                                   00
     01234567000000                                                   
     DC0000       Ref: Generated by Base            A Demo            
